{"version":3,"sources":["hoc/Layout.module.css","Todos/Add/Add.module.css","Rebuild/Rebuild.module.css","Auth/Login/Login.module.css","modules/login.js","Auth/Login/Login.js","Auth/Register/Register.js","Auth/Auth.js","hoc/Layout.js","assets/icons/up-arrow.svg","assets/icons/down-arrow.svg","assets/icons/edit.svg","assets/icons/check.svg","assets/icons/delete.svg","Todos/Todo/Todo.js","assets/icons/sort-priority.svg","assets/icons/sort-arrows.svg","assets/icons/filter.svg","assets/icons/search.svg","Todos/Filters/Filters.js","Todos/Add/Add.js","modules/todo.js","Rebuild/Rebuild.js","Todos/TodoModal/TodoModal.js","Todos/Todos.js","App.js","reportWebVitals.js","index.js","Todos/Filters/Filters.module.css","Auth/Auth.module.css","Todos/Todos.module.css","Todos/Todo/Todo.module.css","Todos/TodoModal/TodoModal.module.css","Auth/Register/Register.module.css"],"names":["module","exports","storage","window","localStorage","KEY_USERS","KEY_LOGIN","getUsers","data","JSON","parse","getItem","Array","saveUser","setItem","isAuth","register","user","email","password","passwordConfirm","users","filter","el","length","alert","push","stringify","addUsers","Login","props","validationSchema","yup","shape","required","min","max","initialValues","validateOnBlur","onSubmit","values","loginHandler","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","className","loginCss","form","legend","formItem","htmlFor","type","name","onChange","onBlur","value","invalid","valid","error","defaultValue","autoComplete","btn","btnLogin","disabled","onClick","renderLoginForm","Register","oneOf","registerHandler","registerCss","btnRegister","Auth","useState","activeForm","state","setState","useEffect","history","pathname","changeActiveForm","active","bind","LoginContainer","currentUser","login","toString","trim","Layout","layoutCss","main","children","Todo","hide","ts","date","Date","now","fullDate","str","getDate","getMonth","getFullYear","time","getHours","getMinutes","clsText","todoCss","text","clsChecked","circle","unchecked","completed","checked","container","priority","arrows","src","upArrow","arrow","alt","upPriorityHandler","downArrow","downPriorityHandler","join","title","edit","editHandler","img","editImg","checkHandler","checkImg","delete","deleteHandler","removeImg","Filters","filtersCss","sortDate","dateSortHandler","style","marginLeft","sortPriority","prioritySortHandler","search","searchImg","searchHandler","sortChecked","checkedSortHandler","marginRight","Add","newTodoTitleValue","myRef","React","createRef","addCss","add","placeholder","event","nativeEvent","target","ref","addTodoHandler","current","KEY_TODOS","a","Promise","resolve","todos","getStorageTodos","console","log","getServerTodos","then","res","saveTodos","axios","get","response","Rebuild","rebuildCss","removeItem","TodoModal","maxLength","editTextValue","modalState","innerHTML","editText","Fragment","isShow","modalCss","delete__title","delete__buttons","delete__button","deleteId","delete__buttons_no","closeHandler","edit__title","edit__area","edit__count","edit__buttons","edit__button","edit__button_cancel","editId","Todos","modal","sort","setTodos","searchToggle","getAllTodos","arr","map","userId","closeAlert","showDeleteAlert","id","showEditAlert","changePriority","num","result","saveAllTodosInStorage","checkedTodo","sortTodos","key","b","searchAfterTimeout","includes","newTodos","todosCss","mainContainer","maxId","forEach","setTimeout","loader","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b4acb2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2PyNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add\":\"Add_add__Eatp8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Rebuild\":\"Rebuild_Rebuild__2hSNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__24NK2\",\"formItem\":\"Login_formItem__1-2d6\",\"error\":\"Login_error__g3xBT\",\"invalid\":\"Login_invalid__1XoaI\",\"valid\":\"Login_valid__5hI5Y\",\"btn\":\"Login_btn__1C8BJ\",\"btnRegister\":\"Login_btnRegister__nEltr\",\"btnLogin\":\"Login_btnLogin__2XEKO\"};","const storage = window.localStorage\r\nconst KEY_USERS = 'users_4'\r\nconst KEY_LOGIN = 'is_login_4'\r\n\r\nfunction getUsers() {\r\n    const data = JSON.parse(storage.getItem(KEY_USERS))\r\n    return data instanceof Array ? data : null\r\n}\r\n\r\nfunction addUsers(users) {\r\n    if (users instanceof Array) {\r\n        storage.setItem(KEY_USERS, JSON.stringify(users))\r\n    }\r\n}\r\n\r\nfunction saveUser() {\r\n    storage.setItem(KEY_LOGIN, 'true')\r\n}\r\n\r\nexport function removeUserAuth() {\r\n    storage.removeItem(KEY_LOGIN)\r\n}\r\n\r\nexport function isAuth() {\r\n    return storage.getItem(KEY_LOGIN) === 'true'\r\n}\r\n\r\nexport function login(user) {\r\n    if (user.email && user.password) {\r\n        const users = getUsers()\r\n\r\n        if (users instanceof Array) {\r\n            const currentUser = users.filter(el => {\r\n                if (el.email === user.email && el.password === user.password) return el\r\n            })\r\n\r\n            saveUser()\r\n            return !!currentUser.length\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport function register(user) {\r\n    if (user.email && user.password && user.passwordConfirm) {\r\n        if (user.password === user.passwordConfirm) {\r\n            const users = getUsers() || []\r\n\r\n            // eslint-disable-next-line array-callback-return\r\n            const check = users.filter(el => {\r\n                if (el.email === user.email) return el\r\n            })\r\n\r\n            if (check.length) {\r\n                alert('This user already exists!')\r\n                return\r\n            }\r\n\r\n            users.push({\r\n                email: user.email,\r\n                password: user.password\r\n            })\r\n\r\n            addUsers(users)\r\n            saveUser()\r\n\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    return false\r\n}\r\n","import React from 'react'\r\nimport loginCss from './Login.module.css'\r\nimport * as yup from \"yup\";\r\nimport {Formik} from \"formik\";\r\n\r\nconst Login = props => {\r\n\r\n    const renderLoginForm = () => {\r\n        const validationSchema = yup.object().shape({\r\n            email: yup.string().required('Введите email').email('Email не корректный')\r\n                .min(5, 'Email должен быть больше 5 символов')\r\n                .max(40, 'Email должен быть не больше 40 символов'),\r\n            password: yup.string().required('Введите пароль')\r\n                .min(5, 'Пароль должен быть больше 5 символов')\r\n                .max(16, 'Пароль должен быть не больше 16 символов')\r\n        })\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={values => props.loginHandler(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {\r\n                    ({\r\n                         values, errors, touched,\r\n                         handleChange, handleBlur,\r\n                         isValid, handleSubmit, dirty\r\n                     }) => (\r\n                        <form className={loginCss.form}>\r\n                            {props.legend}\r\n                            <div className={loginCss.formItem}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name={'email'}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.name}\r\n                                    className={touched.email && errors.email ? loginCss.invalid : loginCss.valid}\r\n                                />\r\n                                {touched.email && errors.email &&\r\n                                <span className={loginCss.error}>{errors.email}</span>}\r\n                            </div>\r\n                            <div className={loginCss.formItem}>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    defaultValue={''}\r\n                                    type=\"password\"\r\n                                    name={'password'}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.name}\r\n                                    className={touched.password && errors.password ? loginCss.invalid : loginCss.valid}\r\n                                    autoComplete={'on'}\r\n                                />\r\n                                {touched.password && errors.password &&\r\n                                <span className={loginCss.error}>{errors.password}</span>}\r\n                            </div>\r\n                            <button\r\n                                className={loginCss.btn + ` ${loginCss.btnLogin}`}\r\n                                disabled={!isValid || !dirty}\r\n                                onClick={handleSubmit}\r\n                                type={'submit'}\r\n                            >Отправить\r\n                            </button>\r\n                        </form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n\r\n    return renderLoginForm()\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport registerCss from './Register.module.css'\r\nimport * as yup from \"yup\";\r\nimport {Formik} from \"formik\";\r\n\r\nconst Register = props => {\r\n\r\n    const renderLoginForm = () => {\r\n        const validationSchema = yup.object().shape({\r\n            email: yup.string().required('Введите email').email('Email не корректный')\r\n                .min(5, 'Email должен быть больше 5 символов')\r\n                .max(40, 'Email должен быть не больше 40 символов'),\r\n            password: yup.string().required('Введите пароль')\r\n                .min(5, 'Пароль должен быть больше 5 символов')\r\n                .max(16, 'Пароль должен быть не больше 16 символов'),\r\n            passwordConfirm: yup.string().required('Введите пароль')\r\n                .min(5, 'Пароль должен быть больше 5 символов')\r\n                .max(16, 'Пароль должен быть не больше 16 символов')\r\n                .oneOf([yup.ref('password')], 'Пароли не совпадают')\r\n        })\r\n\r\n        return (\r\n            <Formik\r\n                initialValues={{\r\n                    email: '',\r\n                    password: '',\r\n                    passwordConfirm: ''\r\n                }}\r\n                validateOnBlur\r\n                onSubmit={values => props.registerHandler(values)}\r\n                validationSchema={validationSchema}\r\n            >\r\n                {\r\n                    ({\r\n                         values, errors, touched,\r\n                         handleChange, handleBlur,\r\n                         isValid, handleSubmit, dirty\r\n                     }) => (\r\n                        <form className={registerCss.form}>\r\n                            {props.legend}\r\n                            <div className={registerCss.formItem}>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name={'email'}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.name}\r\n                                    className={touched.email && errors.email ? registerCss.invalid : registerCss.valid}\r\n                                />\r\n                                {touched.email && errors.email &&\r\n                                <span className={registerCss.error}>{errors.email}</span>}\r\n                            </div>\r\n                            <div className={registerCss.formItem}>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <input\r\n                                    defaultValue={''}\r\n                                    type=\"password\"\r\n                                    name={'password'}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.name}\r\n                                    className={touched.password && errors.password ? registerCss.invalid : registerCss.valid}\r\n                                    autoComplete={'on'}\r\n                                />\r\n                                {touched.password && errors.password &&\r\n                                <span className={registerCss.error}>{errors.password}</span>}\r\n                            </div>\r\n                            <div className={registerCss.formItem}>\r\n                                <label htmlFor=\"passwordConfirm\">Confirm password</label>\r\n                                <input\r\n                                    defaultValue={''}\r\n                                    type=\"password\"\r\n                                    name={'passwordConfirm'}\r\n                                    onChange={handleChange}\r\n                                    onBlur={handleBlur}\r\n                                    value={values.name}\r\n                                    className={touched.passwordConfirm && errors.passwordConfirm ? registerCss.invalid : registerCss.valid}\r\n                                    autoComplete={'on'}\r\n                                />\r\n                                {touched.passwordConfirm && errors.passwordConfirm &&\r\n                                <span className={registerCss.error}>{errors.passwordConfirm}</span>}\r\n                            </div>\r\n                            <button\r\n                                className={registerCss.btn + ` ${registerCss.btnRegister}`}\r\n                                disabled={!isValid || !dirty}\r\n                                onClick={handleSubmit}\r\n                                type={'submit'}\r\n                            >Отправить\r\n                            </button>\r\n                        </form>\r\n                    )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n\r\n\r\n    return renderLoginForm()\r\n\r\n}\r\n\r\nexport default Register\r\n","import React, {useEffect, useState} from 'react'\r\nimport loginCss from './Auth.module.css'\r\nimport {isAuth, login, register} from '../modules/login'\r\nimport Login from \"./Login/Login\";\r\nimport Register from \"./Register/Register\";\r\n\r\nconst Auth = props => {\r\n\r\n    const [state, setState] = useState({\r\n        activeForm: 'login'\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (isAuth()) {\r\n            props.history.push({\r\n                pathname: '/todos'\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const changeActiveForm = (type) => {\r\n        setState({\r\n            activeForm: type\r\n        })\r\n    }\r\n\r\n    const loginHandler = (values) => {\r\n        if (!values) return\r\n\r\n        const user = {\r\n            email: values.email.toString().trim(),\r\n            password: values.password.toString().trim()\r\n        }\r\n\r\n        const status = login(user)\r\n\r\n        if (status) {\r\n            props.history.push({\r\n                pathname: '/todos'\r\n            })\r\n        } else {\r\n            alert('User not found!')\r\n        }\r\n\r\n    }\r\n\r\n    const registerHandler = (values) => {\r\n        if (!values) return\r\n\r\n        const newUser = {\r\n            email: values.email.toString().trim(),\r\n            password: values.password.toString().trim(),\r\n            passwordConfirm: values.passwordConfirm.toString().trim(),\r\n        }\r\n\r\n        const status = register(newUser)\r\n\r\n        if (status) props.history.push({\r\n            pathname: '/todos'\r\n        })\r\n    }\r\n\r\n    const legend = (\r\n        <legend>\r\n                     <span\r\n                         className={state.activeForm === 'login' ? loginCss.active : null}\r\n                         onClick={changeActiveForm.bind(this, 'login')}\r\n                     >Login</span>\r\n            <span\r\n                className={state.activeForm === 'reg' ? loginCss.active : null}\r\n                onClick={changeActiveForm.bind(this, 'reg')}\r\n            >Register</span>\r\n        </legend>\r\n    )\r\n\r\n    return (\r\n        <div className={loginCss.LoginContainer}>\r\n            <div className={loginCss.Login}>\r\n                {\r\n                    state.activeForm === 'login'\r\n                        ? <Login legend={legend} loginHandler={loginHandler}/>\r\n                        : <Register legend={legend} registerHandler={registerHandler}/>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Auth\r\n","import React from 'react'\r\nimport layoutCss from './Layout.module.css'\r\n\r\nconst Layout = props => {\r\n\r\n    return (\r\n        <main className={layoutCss.main}>\r\n            {props.children}\r\n        </main>\r\n    )\r\n\r\n}\r\n\r\nexport default Layout\r\n","export default __webpack_public_path__ + \"static/media/up-arrow.571da108.svg\";","export default __webpack_public_path__ + \"static/media/down-arrow.0c86f414.svg\";","export default __webpack_public_path__ + \"static/media/edit.c1401c13.svg\";","export default __webpack_public_path__ + \"static/media/check.ff0b2fb7.svg\";","export default __webpack_public_path__ + \"static/media/delete.dbbcd2ea.svg\";","import React, {Component} from 'react'\r\nimport todoCss from './Todo.module.css'\r\n\r\nimport upArrow from '../../assets/icons/up-arrow.svg'\r\nimport downArrow from '../../assets/icons/down-arrow.svg'\r\nimport editImg from '../../assets/icons/edit.svg'\r\nimport checkImg from '../../assets/icons/check.svg'\r\nimport removeImg from '../../assets/icons/delete.svg'\r\n\r\nconst Todo = props => {\r\n\r\n    const getDate = (ts) => {\r\n        let str\r\n        ts = new Date(ts)\r\n\r\n        str = `${ts.getDate().toString().length === 1 ? '0' + ts.getDate() : ts.getDate()}.`\r\n        str += `${ts.getMonth() + 1 === 1 ? '0' + (ts.getMonth() + 1) : ts.getMonth() + 1}.`\r\n        str += `${ts.getFullYear()}`\r\n\r\n        return str\r\n    }\r\n\r\n    const getTime = (ts) => {\r\n        ts = new Date(ts)\r\n        return `${ts.getHours()}:${ts.getMinutes()}`\r\n    }\r\n    \r\n    if (props.hide) {\r\n        return null\r\n    }\r\n\r\n    const date = props.date ? props.date : Date.now()\r\n\r\n    const fullDate = {\r\n        date: getDate(date),\r\n        time: getTime(date)\r\n    }\r\n\r\n    const clsText = [\r\n        todoCss.text\r\n    ]\r\n\r\n    const clsChecked = [\r\n        todoCss.circle,\r\n        todoCss.unchecked\r\n    ]\r\n\r\n    if (props.completed) {\r\n        clsText.push(todoCss.completed)\r\n        clsChecked.push(todoCss.checked)\r\n    }\r\n\r\n    return (\r\n        <div className={todoCss.container}>\r\n            <div className={todoCss.Todo}>\r\n                <div className={todoCss.date}>\r\n                    <p>{fullDate['date']}</p>\r\n                    <p>{fullDate['time']}</p>\r\n                </div>\r\n                <div className={todoCss.priority}>\r\n                    {props.priority}\r\n                </div>\r\n                <div className={todoCss.arrows}>\r\n                    <img\r\n                        src={upArrow}\r\n                        className={todoCss.arrow}\r\n                        alt=\"Up Arrow\"\r\n                        onClick={props.upPriorityHandler}\r\n                    />\r\n                    <img\r\n                        src={downArrow}\r\n                        className={todoCss.arrow}\r\n                        alt=\"Up Arrow\"\r\n                        onClick={props.downPriorityHandler}\r\n                    />\r\n                </div>\r\n                <div className={clsText.join(' ')}>\r\n                    {props.title}\r\n                </div>\r\n                <div>\r\n                    <div\r\n                        className={`${todoCss.circle} ${todoCss.edit}`}\r\n                        onClick={props.editHandler}\r\n                    >\r\n                        <img className={todoCss.img} src={editImg} alt=\"Edit\"/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div\r\n                        className={clsChecked.join(' ')}\r\n                        onClick={props.checkHandler}\r\n                    >\r\n                        <img className={todoCss.img} src={checkImg} alt=\"Check\"/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div\r\n                        className={`${todoCss.circle} ${todoCss.delete}`}\r\n                        onClick={props.deleteHandler}\r\n                    >\r\n                        <img className={todoCss.img} src={removeImg} alt=\"Remove\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","export default __webpack_public_path__ + \"static/media/sort-priority.e2fa3673.svg\";","export default __webpack_public_path__ + \"static/media/sort-arrows.178654b9.svg\";","export default __webpack_public_path__ + \"static/media/filter.9b318674.svg\";","export default __webpack_public_path__ + \"static/media/search.a85101f2.svg\";","import React from 'react'\r\nimport filtersCss from './Filters.module.css'\r\n\r\nimport sortPriority from '../../assets/icons/sort-priority.svg'\r\nimport sortDate from '../../assets/icons/sort-arrows.svg'\r\nimport sortChecked from '../../assets/icons/filter.svg'\r\nimport searchImg from '../../assets/icons/search.svg'\r\n\r\nconst Filters = props => {\r\n    \r\n    return (\r\n        <div className={filtersCss.container}>\r\n            <div>\r\n                <div>\r\n                    <img\r\n                        className={filtersCss.img}\r\n                        src={sortDate}\r\n                        alt=\"Sort by date\"\r\n                        onClick={props.dateSortHandler}\r\n                        style={{\r\n                            marginLeft: '-55px'\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        className={filtersCss.img}\r\n                        src={sortPriority}\r\n                        alt=\"Sort by priority\"\r\n                        onClick={props.prioritySortHandler}\r\n                        style={{\r\n                            marginLeft: '-47px'\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className={filtersCss.search}>\r\n                    <img src={searchImg} alt=\"Search Todo\"/>\r\n                    <input\r\n                        type=\"text\"\r\n                        onChange={props.searchHandler}\r\n                        style={{\r\n                            marginLeft: '-24px'\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <img\r\n                        className={filtersCss.img}\r\n                        src={sortChecked}\r\n                        alt=\"Sort by checked\"\r\n                        onClick={props.checkedSortHandler}\r\n                        style={{\r\n                            marginRight: '-25px'\r\n                        }}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filters\r\n","import React from 'react'\r\nimport addCss from './Add.module.css'\r\n\r\nconst Add = props => {\r\n\r\n    let newTodoTitleValue = ''\r\n    const myRef = React.createRef()\r\n\r\n    const writeNewTodoTitle = (event) => {\r\n        newTodoTitleValue = event.nativeEvent.target.value.toString().trim()\r\n    }\r\n\r\n    const clickHandler = () => {\r\n        props.addTodoHandler(newTodoTitleValue)\r\n        newTodoTitleValue = ''\r\n        myRef.current.value = ''\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={addCss.add}\r\n        >\r\n            <input\r\n                type=\"text\"\r\n                placeholder={'Task'}\r\n                onChange={writeNewTodoTitle}\r\n                ref={myRef}\r\n            />\r\n            <button\r\n                onClick={clickHandler}\r\n            >ADD\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Add\r\n","import axios from \"axios\"\r\n\r\nconst storage = window.localStorage\r\nconst KEY_TODOS = 'todos_4'\r\n\r\nexport function clearTodos() {\r\n    storage.removeItem(KEY_TODOS)\r\n}\r\n\r\nexport async function getAllTodos() {\r\n    return new Promise(resolve => {\r\n        let todos = getStorageTodos()\r\n\r\n        if (todos instanceof Array && todos.length) {\r\n            console.log('Storage Todos')\r\n            resolve(todos)\r\n        } else {\r\n            getServerTodos().then(res => {\r\n                console.log('Server Todos')\r\n                saveTodos(res)\r\n                resolve(res)\r\n            })\r\n        }\r\n    })\r\n}\r\n\r\nasync function getServerTodos() {\r\n    const url = 'https://jsonplaceholder.typicode.com/todos'\r\n\r\n    try {\r\n        const response = await axios.get(url)\r\n\r\n        return response.data\r\n    } catch (e) {\r\n        console.log(e)\r\n        return []\r\n    }\r\n}\r\n\r\nfunction getStorageTodos() {\r\n    const todos = JSON.parse(storage.getItem(KEY_TODOS))\r\n\r\n    if (todos instanceof Array) {\r\n        return todos\r\n    }\r\n\r\n    return []\r\n}\r\n\r\nexport async function saveTodos(todos) {\r\n    return new Promise(resolve => {\r\n        if (todos instanceof Array && todos.length) {\r\n            storage.setItem(KEY_TODOS, JSON.stringify(todos))\r\n            console.log('Todos were saved!')\r\n            resolve()\r\n        }\r\n    })\r\n}\r\n","import React from 'react'\r\nimport rebuildCss from './Rebuild.module.css'\r\nimport {removeUserAuth} from '../modules/login'\r\nimport {clearTodos} from '../modules/todo'\r\n\r\nconst Rebuild = props => {\r\n\r\n    const rebuild = () => {\r\n        removeUserAuth()\r\n        clearTodos()\r\n        props.history.push({\r\n            pathname: '/'\r\n        })\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className={rebuildCss.Rebuild}\r\n            onClick={rebuild}\r\n        >REBUILD</button>\r\n    )\r\n}\r\n\r\nexport default Rebuild\r\n","import React, {useEffect} from 'react'\r\nimport modalCss from './TodoModal.module.css'\r\n\r\nconst TodoModal = props => {\r\n\r\n    const myRef = React.createRef()\r\n    const maxLength = 100\r\n    const minLength = 5\r\n\r\n    let editTextValue = ''\r\n\r\n    useEffect(() => {\r\n        if (props.modalState.type === 'edit') {\r\n            myRef.current.innerHTML = maxLength - props.modalState.editText.toString().trim().length\r\n            editTextValue = props.modalState.editText.toString().trim()\r\n        }\r\n    }, [])\r\n\r\n    const changeTextHandler = (event) => {\r\n        const value = event.nativeEvent.target.value.toString().trim()\r\n\r\n        editTextValue = value\r\n        myRef.current.innerHTML = maxLength - value.length\r\n    }\r\n\r\n    const deleteTodo = () => {\r\n        props.deleteHandler(props.modalState.deleteId)\r\n    }\r\n\r\n    const edit = () => {\r\n        const length = editTextValue.length\r\n\r\n        if (length < minLength || length > maxLength) {\r\n            alert(`Invalid string length! The correct length is ${minLength} to ${maxLength} characters.`)\r\n            return\r\n        }\r\n\r\n        if (props.modalState.editText.toString().trim().length !== editTextValue.length) {\r\n            props.editHandler(props.modalState.editId, editTextValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                props.modalState.isShow && props.modalState.type === 'delete'\r\n                    ? <div className={modalCss.container}>\r\n                        <div className={modalCss.delete}>\r\n                            <h2 className={modalCss.delete__title}>Delete item?</h2>\r\n                            <div className={modalCss.delete__buttons}>\r\n                                <button\r\n                                    className={modalCss.delete__button}\r\n                                    onClick={deleteTodo}\r\n                                >YES\r\n                                </button>\r\n                                <button\r\n                                    className={`${modalCss.delete__button} ${modalCss.delete__buttons_no}`}\r\n                                    onClick={props.closeHandler}\r\n                                >NO\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n            }\r\n\r\n            {\r\n                props.modalState.isShow && props.modalState.type === 'edit'\r\n                    ? <div className={modalCss.container}>\r\n                        <div className={modalCss.edit}>\r\n                            <h2 className={modalCss.edit__title}>Edit text</h2>\r\n                            <textarea\r\n                                className={modalCss.edit__area}\r\n                                defaultValue={props.modalState.editText}\r\n                                onChange={changeTextHandler}\r\n                            />\r\n                            <span>\r\n                                Characters limit:\r\n                                    <p className={modalCss.edit__count} ref={myRef}/>\r\n                            </span>\r\n                            <div className={modalCss.edit__buttons}>\r\n                                <button\r\n                                    className={modalCss.edit__button + ' ' + modalCss.edit__button_cancel}\r\n                                    onClick={props.closeHandler}\r\n                                >CANCEL\r\n                                </button>\r\n                                <button\r\n                                    className={modalCss.edit__button}\r\n                                    onClick={edit}\r\n                                >SAVE\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    : null\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoModal\r\n","import React, {useEffect, useState} from 'react'\r\nimport todosCss from './Todos.module.css'\r\n\r\nimport Todo from \"./Todo/Todo\";\r\nimport Filters from './Filters/Filters'\r\nimport Add from './Add/Add'\r\nimport Rebuild from \"../Rebuild/Rebuild\";\r\n\r\nimport {getAllTodos, saveTodos} from '../modules/todo'\r\nimport {isAuth} from '../modules/login'\r\nimport TodoModal from \"./TodoModal/TodoModal\";\r\n\r\nconst Todos = props => {\r\n\r\n    const [state, setState] = useState({\r\n        modal: {\r\n            isShow: false,\r\n            type: '',\r\n            deleteId: null,\r\n            editId: null,\r\n            editText: ''\r\n        },\r\n        sort: {\r\n            priority: true,\r\n            date: false,\r\n            completed: false\r\n        }\r\n    })\r\n\r\n    const [todos, setTodos] = useState([])\r\n\r\n    let searchToggle = true\r\n    const minLength = 5\r\n    const maxLength = 100\r\n\r\n    useEffect(() => {\r\n        if (!isAuth()) {\r\n            props.history.push({\r\n                pathname: '/'\r\n            })\r\n\r\n            return\r\n        }\r\n\r\n        getAllTodos().then(res => {\r\n            const arr = res.map(el => {\r\n                return {\r\n                    ...el,\r\n                    date: el.date || Date.now(),\r\n                    priority: el.priority || el.userId,\r\n                    hide: false\r\n                }\r\n            })\r\n\r\n            saveTodos(arr)\r\n\r\n            setTodos(arr)\r\n        })\r\n    }, [])\r\n\r\n    const closeAlert = () => {\r\n        setState({\r\n            ...state,\r\n            modal: {\r\n                isShow: false,\r\n                type: '',\r\n                deleteId: null,\r\n                editId: null,\r\n                editText: ''\r\n            }\r\n        })\r\n    }\r\n\r\n    const showDeleteAlert = (id) => {\r\n        if (!id) return\r\n\r\n        setState({\r\n            ...state,\r\n            modal: {\r\n                ...state.modal,\r\n                isShow: true,\r\n                type: 'delete',\r\n                deleteId: id\r\n            }\r\n        })\r\n    }\r\n\r\n    const showEditAlert = (id, title) => {\r\n        if (!id || !title) return\r\n\r\n        setState({\r\n            ...state,\r\n            modal: {\r\n                ...state.modal,\r\n                isShow: true,\r\n                type: 'edit',\r\n                editId: id,\r\n                editText: title\r\n            }\r\n        })\r\n    }\r\n\r\n    const changePriority = (id, num) => {\r\n        if (!id || !num) return\r\n\r\n        const arr = todos.map(el => {\r\n            if (el.id === id) {\r\n                const result = el.priority + num\r\n                el.priority = result > 1 ? result : 1\r\n            }\r\n            return el\r\n        })\r\n\r\n        if (arr.length) {\r\n            saveAllTodosInStorage(arr)\r\n\r\n            setTodos(arr)\r\n        }\r\n    }\r\n\r\n    const deleteTodo = (id) => {\r\n        if (!id) return\r\n\r\n        const arr = todos.filter(el => el.id !== id)\r\n\r\n        saveAllTodosInStorage(arr)\r\n\r\n        setTodos(arr)\r\n\r\n        closeAlert()\r\n    }\r\n\r\n    const editTodo = (id, title) => {\r\n        if (!id || !title) return\r\n\r\n        const arr = todos.map(el => {\r\n            if (el.id === id) el.title = title\r\n\r\n            return el\r\n        })\r\n\r\n        if (arr.length) {\r\n            saveAllTodosInStorage(arr)\r\n\r\n            setTodos(arr)\r\n        }\r\n\r\n        closeAlert()\r\n    }\r\n\r\n    const checkedTodo = (id) => {\r\n        if (!id) return\r\n\r\n        // eslint-disable-next-line array-callback-return\r\n        const arr = todos.map(el => {\r\n            if (el.id === id) el.completed = !el.completed\r\n            return el\r\n        })\r\n\r\n        if (arr.length) {\r\n            saveAllTodosInStorage(arr)\r\n\r\n            setTodos(arr)\r\n        }\r\n    }\r\n\r\n    const sortTodos = (key) => {\r\n        let arr = []\r\n\r\n        if (state.sort[key]) {\r\n            arr = todos.sort((a, b) => +a[key] < +b[key] ? 1 : -1)\r\n        } else {\r\n            arr = todos.sort((a, b) => +a[key] > +b[key] ? 1 : -1)\r\n        }\r\n\r\n        if (arr.length) {\r\n\r\n            setTodos(arr)\r\n\r\n            setState({\r\n                ...state,\r\n                sort: {\r\n                    ...state.sort,\r\n                    [key]: !state.sort[key]\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const sortByPriority = () => {\r\n        const KEY = 'priority'\r\n        sortTodos(KEY)\r\n    }\r\n\r\n    const sortByDate = () => {\r\n        const KEY = 'date'\r\n        sortTodos(KEY)\r\n    }\r\n\r\n    const sortByChecked = () => {\r\n        const KEY = 'completed'\r\n        sortTodos(KEY)\r\n    }\r\n\r\n    const searchHandler = (event) => {\r\n        const TIMEOUT = 1000\r\n\r\n        if (searchToggle) {\r\n            searchToggle = false\r\n\r\n            setTimeout(() => {\r\n                const value = event.nativeEvent.target.value.toString().trim()\r\n                searchAfterTimeout(value)\r\n\r\n                searchToggle = true\r\n            }, TIMEOUT)\r\n        }\r\n    }\r\n\r\n    const searchAfterTimeout = (value) => {\r\n        let arr = []\r\n\r\n        if (value) {\r\n            arr = todos.filter(el => {\r\n                el.hide = !el.title.includes(value)\r\n                return el\r\n            })\r\n        } else {\r\n            arr = todos.filter(el => {\r\n                el.hide = false\r\n                return el\r\n            })\r\n        }\r\n\r\n        if (arr.length) {\r\n            setTodos(arr)\r\n        }\r\n    }\r\n\r\n    const addNewTodo = (value) => {\r\n        const str = value.toString().trim().length\r\n\r\n        if (str < minLength || str > maxLength) {\r\n            alert(`Invalid string length! The correct length is ${minLength} to ${maxLength} characters.`)\r\n            return\r\n        }\r\n\r\n        let maxId = 0\r\n\r\n        todos.forEach(el => {\r\n            if (el.id > maxId) maxId = el.id\r\n        })\r\n\r\n        const todo = {\r\n            completed: false,\r\n            date: Date.now(),\r\n            hide: false,\r\n            priority: 1,\r\n            id: maxId + 1,\r\n            title: value.toString().trim()\r\n        }\r\n\r\n        const arr = [todo, ...todos]\r\n\r\n        if (arr.length) {\r\n            saveAllTodosInStorage(arr)\r\n\r\n            setTodos(arr)\r\n        }\r\n\r\n    }\r\n\r\n    const saveAllTodosInStorage = async todos => {\r\n        const newTodos = todos.map(el => {\r\n            el.hide = false\r\n            return el\r\n        })\r\n\r\n        if (newTodos.length) {\r\n            saveTodos(newTodos)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                state.modal.isShow\r\n                    ? <TodoModal\r\n                        modalState={state.modal}\r\n                        deleteHandler={deleteTodo}\r\n                        editHandler={editTodo}\r\n                        closeHandler={closeAlert}\r\n                    />\r\n                    : null\r\n            }\r\n\r\n            <div className={todosCss.mainContainer}>\r\n                <h1 className={todosCss.title}>TODO LIST</h1>\r\n                <Add\r\n                    addTodoHandler={addNewTodo}\r\n                />\r\n                <Filters\r\n                    prioritySortHandler={sortByPriority}\r\n                    dateSortHandler={sortByDate}\r\n                    checkedSortHandler={sortByChecked}\r\n                    searchHandler={searchHandler}\r\n                />\r\n                <Rebuild\r\n                    history={props.history}\r\n                />\r\n                <div className={todosCss.Todos}>\r\n                    {todos.length ?\r\n                        todos.map(el => {\r\n                            return (\r\n                                <Todo\r\n                                    key={el.id}\r\n                                    title={el.title}\r\n                                    completed={el.completed}\r\n                                    priority={el.priority}\r\n                                    deleteHandler={showDeleteAlert.bind(this, el.id)}\r\n                                    editHandler={showEditAlert.bind(this, el.id, el.title)}\r\n                                    checkHandler={checkedTodo.bind(this, el.id)}\r\n                                    upPriorityHandler={changePriority.bind(this, el.id, 1)}\r\n                                    downPriorityHandler={changePriority.bind(this, el.id, -1)}\r\n                                    hide={el.hide}\r\n                                    date={el.date}\r\n                                />\r\n                            )\r\n                        })\r\n                        : (\r\n                            <div className={todosCss.loader}>\r\n                                <p>Loading...</p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import React from \"react\";\nimport Auth from \"./Auth/Auth\";\nimport {Route, Switch} from 'react-router-dom'\nimport Layout from \"./hoc/Layout\";\nimport Todos from \"./Todos/Todos\";\n\nconst App = () => {\n    return (\n        <Layout>\n            <Switch>\n                <Route path='/todos' component={Todos}/>\n                <Route path=\"/\" exact component={Auth}/>\n            </Switch>\n        </Layout>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n// import {BrowserRouter} from 'react-router-dom'\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router>\n            <App/>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filters_container__3LStB\",\"img\":\"Filters_img__2vB_f\",\"search\":\"Filters_search__3Hvhs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoginContainer\":\"Auth_LoginContainer__pQlkt\",\"Login\":\"Auth_Login__35Qek\",\"active\":\"Auth_active__10xyE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Todos_mainContainer__1qENM\",\"Todos\":\"Todos_Todos__1Ncwy\",\"title\":\"Todos_title__1jg5O\",\"loader\":\"Todos_loader__2Kf5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Todo_container__1PDdA\",\"Todo\":\"Todo_Todo__1ZqAg\",\"text\":\"Todo_text__2J9kv\",\"date\":\"Todo_date__3Tpzx\",\"completed\":\"Todo_completed__1d7QI\",\"circle\":\"Todo_circle__2Mgvx\",\"edit\":\"Todo_edit__NIr2I\",\"unchecked\":\"Todo_unchecked__aWDsC\",\"checked\":\"Todo_checked__3ftDm\",\"delete\":\"Todo_delete__2jpHQ\",\"priority\":\"Todo_priority__2jWRE\",\"img\":\"Todo_img__1sTZn\",\"arrows\":\"Todo_arrows__QO9iT\",\"arrow\":\"Todo_arrow__3Jujl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TodoModal_container__321gT\",\"delete\":\"TodoModal_delete__3_oSy\",\"delete__title\":\"TodoModal_delete__title__14jEV\",\"delete__buttons\":\"TodoModal_delete__buttons__36FgF\",\"delete__button\":\"TodoModal_delete__button__2ducu\",\"delete__buttons_no\":\"TodoModal_delete__buttons_no__1oOpg\",\"edit\":\"TodoModal_edit__2qjYA\",\"edit__title\":\"TodoModal_edit__title__kqbXo\",\"edit__area\":\"TodoModal_edit__area__2CGJY\",\"edit__count\":\"TodoModal_edit__count__24Ymg\",\"edit__buttons\":\"TodoModal_edit__buttons__2_J-u\",\"edit__button\":\"TodoModal_edit__button__3gzwx\",\"edit__button_cancel\":\"TodoModal_edit__button_cancel__2WuRl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Register_form__201Jq\",\"formItem\":\"Register_formItem__2Zarv\",\"error\":\"Register_error__3iK7f\",\"invalid\":\"Register_invalid__3qfna\",\"valid\":\"Register_valid__3O5Bg\",\"btn\":\"Register_btn__2S_QD\",\"btnRegister\":\"Register_btnRegister__21Kp-\",\"btnLogin\":\"Register_btnLogin__1QQu-\"};"],"sourceRoot":""}